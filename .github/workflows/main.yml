name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - v1.*
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Java para o Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      # 3. Instalar Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # 4. Build do projeto Spring Boot com Maven
      - name: Build Spring Boot application
        run: mvn clean package -DskipTests 
        working-directory: ./rest-api # Caminho do projeto Spring Boot no repositório

      # 5. Build da imagem Docker para a aplicação
      - name: Build Docker image
        run: docker build -t vergaGabriel/rest-api:latest -f ./rest-api/Dockerfile ./rest-api
        #working-directory: ./rest-api

      # 6. Deploy usando docker-compose
      - name: Deploy application and PostgreSQL with docker-compose
        run: |
          # Parar e remover containers antigos, se existirem
          docker-compose -f ./rest-api/docker-compose.yaml down || true

          # Subir os serviços definidos no docker-compose
          docker-compose -f ./rest-api/docker-compose.yaml up -d

      # 7. Instalando ngrok
      - name: Install ngrok
        run: |
         wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          sudo mv ngrok /usr/local/bin
          
      # 8. Expondo url a ngrok
      - name: Expose Application with ngrok
        run: |
          ngrok http 8080 > ngrok.log &
          sleep 5
          cat ngrok.log | grep -o 'https://[0-9a-z]*\.ngrok.io'
        continue-on-error: true

      # 9. Esperando ngrok ficar pronto
      - name: Wait for ngrok to be ready
        run: |
          sleep 5
          curl -v http://localhost:4040/status
